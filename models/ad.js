// const mongoose = require("mongoose");

const sequelizeConnection = require("../data/sqlConnection");
const Sequelize = require("sequelize");

// const priceSchema = mongoose.Schema({
//   consumerPriceGross: String,
//   vatRate: String,
//   type: String,
//   currency: String,
// });

// const adSchema = mongoose.Schema({
//   _id: mongoose.Schema.Types.ObjectId,
//   seller: {
//     type: mongoose.Schema.Types.ObjectId,
//     ref: "SellerDetails",
//   },
//   date: {
//     type: Date,
//     default: Date.now,
//   },
//   vehicleClass: String,
//   category: String,
//   make: String,
//   constructionYear: String,
//   firstRegistration: String,
//   generalInspection: Number,
//   model: String,
//   mileage: Number,
//   importantColumnHashKey: String,
//   modelDescription: String,
//   condition: String,
//   power: Number,
//   gearbox: String,
//   fuel: String,
//   envkvCompliant: Boolean,
//   energyEfficiencyClass: String,
//   co2: Number,
//   consumptionInner: Number,
//   consumptionOuter: Number,
//   consumptionCombined: Number,
//   consumptionUnit: String,
//   envkvPetrolType: String,
//   emissionSticker: String,
//   exteriorColor: String,
//   manufacturerColorName: String,
//   metallic: Boolean,
//   interiorColor: String,
//   interiorType: String,
//   countryVersion: String,
//   damageUnrepaired: Boolean,
//   accidentDamaged: Boolean,
//   roadworthy: Boolean,
//   abs: Boolean,
//   centralLocking: Boolean,
//   climatisation: String,
//   electricHeatedSeats: Boolean,
//   electricWindows: Boolean,
//   esp: Boolean,
//   navigationSystem: Boolean,
//   parkingAssistants: [String],
//   powerAssistedSteering: Boolean,
//   description: String,
//   deliveryPeriod: Number,
//   dealerHomepage: Boolean,
//   warranty: Boolean,
//   price: priceSchema,
//   images: [String],
// });
// module.exports = mongoose.model("Ad", adSchema);

const adSchema = sequelizeConnection.define("ads", {
  id: {
    type: Sequelize.INTEGER,
    autoIncrement: true,
    primaryKey: true,
    allowNull: false,
  },
  sellerId: {
    type: Sequelize.INTEGER,
    allowNull: false,
    required: true,
  },
  vehicleClass: { type: Sequelize.STRING },
  category: { type: Sequelize.STRING },
  make: { type: Sequelize.STRING },
  constructionYear: { type: Sequelize.STRING },
  firstRegistration: { type: Sequelize.STRING },
  generalInspection: { type: Sequelize.INTEGER },
  model: { type: Sequelize.STRING },
  mileage: { type: Sequelize.INTEGER },
  importantColumnHashKey: { type: Sequelize.STRING },
  modelDescription: { type: Sequelize.STRING },
  condition: { type: Sequelize.STRING },
  power: { type: Sequelize.INTEGER },
  gearbox: { type: Sequelize.STRING },
  fuel: { type: Sequelize.STRING },
  envkvCompliant: { type: Sequelize.BOOLEAN },
  energyEfficiencyClass: { type: Sequelize.STRING },
  co2: { type: Sequelize.INTEGER },
  consumptionInner: { type: Sequelize.INTEGER },
  consumptionOuter: { type: Sequelize.INTEGER },
  consumptionCombined: { type: Sequelize.INTEGER },
  consumptionUnit: { type: Sequelize.STRING },
  envkvPetrolType: { type: Sequelize.STRING },
  emissionSticker: { type: Sequelize.STRING },
  exteriorColor: { type: Sequelize.STRING },
  manufacturerColorName: { type: Sequelize.STRING },
  metallic: { type: Sequelize.BOOLEAN },
  interiorColor: { type: Sequelize.STRING },
  interiorType: { type: Sequelize.STRING },
  countryVersion: { type: Sequelize.STRING },
  damageUnrepaired: { type: Sequelize.BOOLEAN },
  accidentDamaged: { type: Sequelize.BOOLEAN },
  roadworthy: { type: Sequelize.BOOLEAN },
  abs: { type: Sequelize.BOOLEAN },
  centralLocking: { type: Sequelize.BOOLEAN },
  climatisation: { type: Sequelize.STRING },
  electricHeatedSeats: { type: Sequelize.BOOLEAN },
  electricWindows: { type: Sequelize.BOOLEAN },
  esp: { type: Sequelize.BOOLEAN },
  navigationSystem: { type: Sequelize.BOOLEAN },
  parkingAssistants: { type: Sequelize.STRING },
  powerAssistedSteering: { type: Sequelize.BOOLEAN },
  description: { type: Sequelize.TEXT },
  deliveryPeriod: { type: Sequelize.INTEGER },
  dealerHomepage: { type: Sequelize.BOOLEAN },
  warranty: { type: Sequelize.BOOLEAN },
  consumerPriceGross: { type: Sequelize.STRING },
  vatRate: { type: Sequelize.STRING },
  type: { type: Sequelize.STRING },
  currency: { type: Sequelize.STRING },
  images: { type: Sequelize.TEXT },
});

module.exports = adSchema;
